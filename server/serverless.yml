frameworkVersion: "3.34.0"

service: dynamic-sales-webhooks

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin


provider:
  name: aws
  runtime: nodejs16.x
  versionFunctions: true
  stage: ${opt:stage, "dev"}
  environment:
    api_accounts_table_name: api_permissions
    queue_requests: sqs-queue-requests-${self:provider.stage}.fifo
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:*
      Resource: "*"


  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sns:*
            - sqs:*
            - s3:*
          Resource: "*"
        - Effect: Allow
          Action:
            - cognito-sync:*
            - cognito-identity:*
          Resource: arn:aws:cognito-identity:*:*:*
        - Effect: Allow
          Action:
            - cognito-idp:*
          Resource: arn:aws:cognito-idp:*:*:*
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
          Resource: "arn:aws:dynamodb:ca-central-1:*:*"

resources:
  Resources:
    QueueRequests:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.queue_requests}
        FifoQueue: true
        VisibilityTimeout: 900

functions:

  fetch-prospects:
    handler: functions/prospects/fetch-prospects.main
    timeout: 30
    memorySize: 128
    events:
      - http:
          path: fetch/{count}
          method: get
          cors: true

  enrich-email:
    handler: functions/apollo/enrich-email.main
    timeout: 900
    events:
      - http:
          path: enrich-email
          method: post
          cors: true

  search-prospects:
    handler: functions/apollo/search-prospects.main
    timeout: 900
    events:
      - http:
          path: search-prospects
          method: post
          cors: true

  put-stored-profile:
    handler: functions/stored-profiles/put-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile
          method: put
          cors: true

  post-stored-profile:
    handler: functions/stored-profiles/post-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile
          method: post
          cors: true

  get-stored-profile:
    handler: functions/stored-profiles/get-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile/{customer}
          method: get
          cors: true

  armpit:
    handler: functions/armpit.main
    events:
      - http:
          path: armpit/{count}
          method: get
          cors: true
