frameworkVersion: "3.34.0"

service: dynamic-sales-webhooks

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin


provider:
  name: aws
  runtime: nodejs16.x
  versionFunctions: true
  stage: ${opt:stage, "dev"}
  environment:
    account_id: ${aws:accountId}
    api_accounts_table_name: api_permissions
    queue_requests: sqs-queue-requests-${self:provider.stage}.fifo
    queue_prospects: sqs-queue-prospects-${self:provider.stage}.fifo
    queue_export_prospects: sqs-queue-export-prospects-${self:provider.stage}.fifo
  iam:
    role:
      statements:  # note - you may have to manually add AmazonDynamoDBFullAccess to the IAM Role for the dynamic-sales-webhooks service
        - Effect: Allow   # Also, the dynamoDB table needs to be in the same region as the service
          Action:
            - dynamodb:*
          Resource: "*"
        - Effect: Allow
          Action:
            - lambda:*
          Resource: "*"
        - Effect: Allow
          Action:
            - sns:*
            - sqs:*
            - s3:*
          Resource: "*"

resources:
  Resources:
    QueueRequests:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.queue_requests}
        FifoQueue: true
        VisibilityTimeout: 900
    QueueProspects:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.queue_prospects}
        FifoQueue: true
        VisibilityTimeout: 900
    QueueExportProspects:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.queue_export_prospects}
        FifoQueue: true
        VisibilityTimeout: 900

functions:

  fetch-prospects:
    handler: functions/prospects/http-fetch-prospects.main
    timeout: 30
    memorySize: 128
    events:
      - http:
          path: fetch
          method: post
          cors: true

  sqs-fetch-prospects:
    handler: functions/prospects/sqs-fetch-prospects.main
    timeout: 900
    memorySize: 1024
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - QueueRequests
              - Arn
          batchSize: 1

  sqs-process-prospects:
    handler: functions/prospects/sqs-process-prospects.main
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - QueueProspects
              - Arn
          batchSize: 10

  enrich-email:
    handler: functions/apollo/enrich-email.main
    timeout: 900
    events:
      - http:
          path: enrich-email
          method: post
          cors: true

  search-prospects:
    handler: functions/apollo/search-prospects.main
    timeout: 900
    events:
      - http:
          path: search-prospects
          method: post
          cors: true

  put-stored-profile:
    handler: functions/stored-profiles/put-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile
          method: put
          cors: true

  post-stored-profile:
    handler: functions/stored-profiles/post-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile
          method: post
          cors: true

  get-stored-profile:
    handler: functions/stored-profiles/get-stored-profile.main
    timeout: 900
    events:
      - http:
          path: stored-profile/{customer}
          method: get
          cors: true

  armpit:
    handler: functions/armpit.main
    events:
      - http:
          path: armpit/{count}
          method: get
          cors: true
